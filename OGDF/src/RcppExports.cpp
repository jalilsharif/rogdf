// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rogdf_version
IntegerVector rogdf_version();
RcppExport SEXP _OGDF_rogdf_version() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rogdf_version());
    return rcpp_result_gen;
END_RCPP
}
// rogdf_circular_layout
NumericMatrix rogdf_circular_layout(GraphAttributes graph, double minDistCircle, double minDistLevel, double minDistSibling, double minDistCC, double pageRatio);
RcppExport SEXP _OGDF_rogdf_circular_layout(SEXP graphSEXP, SEXP minDistCircleSEXP, SEXP minDistLevelSEXP, SEXP minDistSiblingSEXP, SEXP minDistCCSEXP, SEXP pageRatioSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< GraphAttributes >::type graph(graphSEXP);
    Rcpp::traits::input_parameter< double >::type minDistCircle(minDistCircleSEXP);
    Rcpp::traits::input_parameter< double >::type minDistLevel(minDistLevelSEXP);
    Rcpp::traits::input_parameter< double >::type minDistSibling(minDistSiblingSEXP);
    Rcpp::traits::input_parameter< double >::type minDistCC(minDistCCSEXP);
    Rcpp::traits::input_parameter< double >::type pageRatio(pageRatioSEXP);
    rcpp_result_gen = Rcpp::wrap(rogdf_circular_layout(graph, minDistCircle, minDistLevel, minDistSibling, minDistCC, pageRatio));
    return rcpp_result_gen;
END_RCPP
}
// rogdf_tree_layout
NumericMatrix rogdf_tree_layout(GraphAttributes graph, double siblingDistance, double subtreeDistance, double levelDistance, double treeDistance, bool orthogonalLayout, Orientation orientation, TreeLayout::RootSelectionType selectRoot);
RcppExport SEXP _OGDF_rogdf_tree_layout(SEXP graphSEXP, SEXP siblingDistanceSEXP, SEXP subtreeDistanceSEXP, SEXP levelDistanceSEXP, SEXP treeDistanceSEXP, SEXP orthogonalLayoutSEXP, SEXP orientationSEXP, SEXP selectRootSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< GraphAttributes >::type graph(graphSEXP);
    Rcpp::traits::input_parameter< double >::type siblingDistance(siblingDistanceSEXP);
    Rcpp::traits::input_parameter< double >::type subtreeDistance(subtreeDistanceSEXP);
    Rcpp::traits::input_parameter< double >::type levelDistance(levelDistanceSEXP);
    Rcpp::traits::input_parameter< double >::type treeDistance(treeDistanceSEXP);
    Rcpp::traits::input_parameter< bool >::type orthogonalLayout(orthogonalLayoutSEXP);
    Rcpp::traits::input_parameter< Orientation >::type orientation(orientationSEXP);
    Rcpp::traits::input_parameter< TreeLayout::RootSelectionType >::type selectRoot(selectRootSEXP);
    rcpp_result_gen = Rcpp::wrap(rogdf_tree_layout(graph, siblingDistance, subtreeDistance, levelDistance, treeDistance, orthogonalLayout, orientation, selectRoot));
    return rcpp_result_gen;
END_RCPP
}
// rogdf_fmmm_layout
NumericMatrix rogdf_fmmm_layout(GraphAttributes graph, ROGDF_FMMM_Options options);
RcppExport SEXP _OGDF_rogdf_fmmm_layout(SEXP graphSEXP, SEXP optionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< GraphAttributes >::type graph(graphSEXP);
    Rcpp::traits::input_parameter< ROGDF_FMMM_Options >::type options(optionsSEXP);
    rcpp_result_gen = Rcpp::wrap(rogdf_fmmm_layout(graph, options));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_OGDF_rogdf_version", (DL_FUNC) &_OGDF_rogdf_version, 0},
    {"_OGDF_rogdf_circular_layout", (DL_FUNC) &_OGDF_rogdf_circular_layout, 6},
    {"_OGDF_rogdf_tree_layout", (DL_FUNC) &_OGDF_rogdf_tree_layout, 8},
    {"_OGDF_rogdf_fmmm_layout", (DL_FUNC) &_OGDF_rogdf_fmmm_layout, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_OGDF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
